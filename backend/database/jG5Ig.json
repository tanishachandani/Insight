{"summary": "**Overview**\n\n- Announcements\n- NP-Completeness\n- Examples of NP Problems\n- Decision vs. Optimization Problems\n- Brute Force Search\n- P vs. NP\n- Hard Problems\n- Reductions\n- NP-Complete Problems\n\n**NP-Completeness**\n\n- **NP-Problems:** Decision problems that can be solved in nondeterministic polynomial time.\n- **Reductions:** A method to prove that one problem is at least as hard as another.\n- **NP-Completeness:** A property of problems that is at least as hard as any other problem in NP.\n\n**Examples of NP Problems**\n\n- **SAT:** Given a logical formula, determine if there is an assignment to the variables that makes the formula true.\n- **Hamiltonian Cycle:** Given an undirected graph, determine if there is a cycle that visits every vertex exactly once.\n- **General Knapsack:** Given a set of items with weights and values, determine the subset of items that maximizes the total value without exceeding a given capacity.\n\n**Decision vs. Optimization Problems**\n\n- **Decision problems:** Ask if there exists a solution that satisfies a certain condition.\n- **Optimization problems:** Seek to find the solution that optimizes a given objective function.\n\n**Brute Force Search**\n\n- A na\u00efve algorithm that considers every possible solution and returns the best one.\n- Typically has exponential time complexity.\n\n**P vs. NP**\n\n- **Questions:** Is every NP problem solvable in polynomial time?\n- **Most computer scientists believe:** P \u2260 NP, meaning that some NP problems are fundamentally difficult.\n\n**Hard Problems**\n\n- Problems that appear to be difficult to solve despite decades of effort.\n- Proving that a problem is hard is extremely challenging.\n\n**Reductions**\n\n- A method to demonstrate that one problem is at least as hard as another.\n- Involves converting an instance of one problem into an instance of the other problem in polynomial time.\n\n**NP-Complete Problems**\n\n- **Definition:** Problems in NP that are at least as hard as any other problem in NP.\n- **Implications:**\n    - If any NP problem is hard, then all NP-Complete problems are hard.\n    - If an NP-Complete problem can be solved in polynomial time, then all NP problems can be solved in polynomial time.\n- **Examples:** Circuit SAT, Formula SAT, Maximum Independent Set, TSP, Hamiltonian Cycle, Knapsack", "flash_cards": [["Homework 5 due date", "Today"], ["Exam 3 upcoming week", "Same format"], ["Topics for Exam 3", "Huffman codes\nMSTs\nDynamic Programming\nLCSS/Knapsack/CMM/All -pairs shortest path/MIS in \ntrees/Travelling salesman"], ["NP Problems and NP completeness", "NP-Completeness (Ch 8)\nNP-Problems\nReductions\nNP-Completeness & NP -Hardness\nSAT\nHamiltonian Cycle\nZero -One Equations\nKnapsack"], ["NP", "Such problems are said to be in Nondeterministic Polynomial time (NP)."], ["NP-Decision problems", "NP-Decision problems ask if there is some object that satisfies a polynomial time -checkable property."], ["NP-Optimization problems", "NP-Optimization problems ask for the object that maximizes (or minimizes) some polynomial time -computable objective."], ["SAT Problem", "Problem: Formula -SAT\nGiven a logical formula in a number of Boolean \nvariables, is there an assignment to the \nvariables that causes the formula to be true?"], ["SAT Applications", "\u2022Circuit Design\n\u2022Logic Puzzles\n\u2022Cryptanalysis"], ["Hamiltonian Cycle", "Given an undirected graph G is there a cycle \nthat visits every vertex exactly once?"]], "quiz": [{"question": "What is the time complexity of a brute force algorithm that checks every possible solution for a NP problem?", "possible_answers": ["NP-Hard", "Exponential", "NP-Complete", "O(n^2)", "Polynomial"], "index": 1}, {"question": "NP", "possible_answers": ["NP-Completeness (Ch 8)\nNP-Problems\nReductions\nNP-Completeness & NP -Hardness\nSAT\nHamiltonian Cycle\nZero -One Equations\nKnapsack", "\u2022Circuit Design\n\u2022Logic Puzzles\n\u2022Cryptanalysis", "Given an undirected graph G is there a cycle \nthat visits every vertex exactly once?", "Such problems are said to be in Nondeterministic Polynomial time (NP)."], "index": 3}, {"question": "Which of the following is an example of a problem that has been proven to be NP-Complete?", "possible_answers": ["Finding the minimum vertex cover in a graph", "Finding the shortest path in a graph", "Finding the maximum flow in a network", "Sorting an array of numbers", "Finding the maximum matching in a graph"], "index": 0}, {"question": "Which of the following is a decision problem?", "possible_answers": ["Find the longest path in a graph", "Sort an array of numbers", "Compute the minimum spanning tree of a graph", "Find the maximum clique in a graph", "Determine if a graph is connected"], "index": 4}, {"question": "What is the difference between NP-Complete and NP-Hard problems?", "possible_answers": ["NP-Hard problems are harder than NP-Complete problems", "There is no difference between NP-Complete and NP-Hard problems", "NP-Complete problems are in NP, while NP-Hard problems are not", "NP-Hard problems are in NP, while NP-Complete problems are not", "NP-Complete problems are harder than NP-Hard problems"], "index": 2}, {"question": "Exam 3 upcoming week", "possible_answers": ["Same format", "Such problems are said to be in Nondeterministic Polynomial time (NP).", "Problem: Formula -SAT\nGiven a logical formula in a number of Boolean \nvariables, is there an assignment to the \nvariables that causes the formula to be true?", "\u2022Circuit Design\n\u2022Logic Puzzles\n\u2022Cryptanalysis"], "index": 0}, {"question": "NP-Decision problems", "possible_answers": ["NP-Optimization problems ask for the object that maximizes (or minimizes) some polynomial time -computable objective.", "Huffman codes\nMSTs\nDynamic Programming\nLCSS/Knapsack/CMM/All -pairs shortest path/MIS in \ntrees/Travelling salesman", "\u2022Circuit Design\n\u2022Logic Puzzles\n\u2022Cryptanalysis", "NP-Decision problems ask if there is some object that satisfies a polynomial time -checkable property."], "index": 3}, {"question": "What is the significance of Circuit SAT being NP-Complete?", "possible_answers": ["It implies that any NP problem can be solved in polynomial time", "It implies that NP-Complete problems are all equivalent in terms of difficulty", "It implies that all NP problems can be solved in exponential time", "It implies that any NP problem can be reduced to Circuit SAT", "It implies that Circuit SAT is the hardest problem in NP"], "index": 3}, {"question": "NP-Optimization problems ask for the object that maximizes (or minimizes) some polynomial time -computable objective.", "possible_answers": ["SAT Applications", "SAT Problem", "NP-Optimization problems", "NP-Decision problems"], "index": 2}, {"question": "What is the $1,000,000 question in computer science?", "possible_answers": ["Is SAT NP-Hard?", "Is Hamiltonian Cycle NP-Complete?", "Is MST NP-Hard?", "Is P = NP?", "Is Knapsack NP-Complete?"], "index": 3}, {"question": "Which of the following is a common approach for proving that a problem is NP-Complete?", "possible_answers": ["Reductions", "Brute force search", "Branch and bound", "Dynamic programming", "Divide and conquer"], "index": 0}, {"question": "Which of the following is NOT a NP-Complete problem?", "possible_answers": ["Circuit SAT", "Maximum Independent Set", "MST", "Knapsack", "Hamiltonian Cycle"], "index": 2}, {"question": "\u2022Circuit Design\n\u2022Logic Puzzles\n\u2022Cryptanalysis", "possible_answers": ["NP-Optimization problems", "Hamiltonian Cycle", "SAT Applications", "NP"], "index": 2}, {"question": "What is the key idea behind a reduction in the context of NP-Completeness?", "possible_answers": ["Transforming a problem into an easier problem that can be solved in polynomial time", "Transforming a problem into an equivalent problem that is known to be NP-Complete", "Transforming a problem into a problem that is NP-Hard", "Transforming a problem into a problem that is PSPACE-Complete", "Transforming a problem into a problem that requires exponential time to solve"], "index": 1}, {"question": "Hamiltonian Cycle", "possible_answers": ["NP-Optimization problems ask for the object that maximizes (or minimizes) some polynomial time -computable objective.", "NP-Completeness (Ch 8)\nNP-Problems\nReductions\nNP-Completeness & NP -Hardness\nSAT\nHamiltonian Cycle\nZero -One Equations\nKnapsack", "Huffman codes\nMSTs\nDynamic Programming\nLCSS/Knapsack/CMM/All -pairs shortest path/MIS in \ntrees/Travelling salesman", "Given an undirected graph G is there a cycle \nthat visits every vertex exactly once?"], "index": 3}, {"question": "What is a key characteristic of any NP-Complete problem?", "possible_answers": ["It can be solved in exponential time by a deterministic algorithm", "It can be solved in polynomial time by a randomized algorithm", "It can be solved in polynomial time if and only if P = NP", "It can be solved in polynomial time by a brute force algorithm", "It can be solved in exponential time by a randomized algorithm"], "index": 2}, {"question": "Today", "possible_answers": ["NP Problems and NP completeness", "Hamiltonian Cycle", "Exam 3 upcoming week", "Homework 5 due date"], "index": 3}, {"question": "SAT Problem", "possible_answers": ["NP-Optimization problems ask for the object that maximizes (or minimizes) some polynomial time -computable objective.", "\u2022Circuit Design\n\u2022Logic Puzzles\n\u2022Cryptanalysis", "NP-Decision problems ask if there is some object that satisfies a polynomial time -checkable property.", "Problem: Formula -SAT\nGiven a logical formula in a number of Boolean \nvariables, is there an assignment to the \nvariables that causes the formula to be true?"], "index": 3}, {"question": "Topics for Exam 3", "possible_answers": ["Huffman codes\nMSTs\nDynamic Programming\nLCSS/Knapsack/CMM/All -pairs shortest path/MIS in \ntrees/Travelling salesman", "\u2022Circuit Design\n\u2022Logic Puzzles\n\u2022Cryptanalysis", "Problem: Formula -SAT\nGiven a logical formula in a number of Boolean \nvariables, is there an assignment to the \nvariables that causes the formula to be true?", "Such problems are said to be in Nondeterministic Polynomial time (NP)."], "index": 0}, {"question": "NP-Completeness (Ch 8)\nNP-Problems\nReductions\nNP-Completeness & NP -Hardness\nSAT\nHamiltonian Cycle\nZero -One Equations\nKnapsack", "possible_answers": ["NP Problems and NP completeness", "Exam 3 upcoming week", "Homework 5 due date", "Hamiltonian Cycle"], "index": 0}], "title": "Reductions and NP-Completeness", "id": "jG5Ig"}